{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/components.module.ts","webpack:///src/app/components/container-header/container-header.component.ts","webpack:///src/app/components/container-header/container-header.component.html","webpack:///src/app/components/error-message/error-message.component.ts","webpack:///src/app/components/error-message/error-message.component.html","webpack:///src/app/components/food-icon/food-icon.component.ts","webpack:///src/app/components/food-icon/food-icon.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/icons/calendar/calendar.component.ts","webpack:///src/app/components/icons/calendar/calendar.component.html","webpack:///src/app/components/icons/download/download.component.ts","webpack:///src/app/components/icons/download/download.component.html","webpack:///src/app/components/icons/full-screen/full-screen.component.ts","webpack:///src/app/components/icons/full-screen/full-screen.component.html","webpack:///src/app/components/icons/icons.module.ts","webpack:///src/app/components/icons/letter/letter.component.ts","webpack:///src/app/components/icons/letter/letter.component.html","webpack:///src/app/components/icons/upload/upload.component.ts","webpack:///src/app/components/icons/upload/upload.component.html","webpack:///src/app/components/icons/upload2/upload2.component.ts","webpack:///src/app/components/icons/upload2/upload2.component.html","webpack:///src/app/components/inputs/checkbox/checkbox.component.ts","webpack:///src/app/components/inputs/checkbox/checkbox.component.html","webpack:///src/app/components/inputs/date-picker/date-picker.component.ts","webpack:///src/app/components/inputs/date-picker/date-picker.component.html","webpack:///src/app/components/inputs/date-range-picker/date-range-picker.component.ts","webpack:///src/app/components/inputs/date-range-picker/date-range-picker.component.html","webpack:///src/app/components/inputs/dateformat.ts","webpack:///src/app/components/inputs/inputs.module.ts","webpack:///src/app/components/inputs/search-field/search-field.component.ts","webpack:///src/app/components/inputs/search-field/search-field.component.html","webpack:///src/app/components/inputs/select/select.component.ts","webpack:///src/app/components/inputs/select/select.component.html","webpack:///src/app/components/inputs/simple-input/simple-input.component.ts","webpack:///src/app/components/inputs/simple-input/simple-input.component.html","webpack:///src/app/components/inputs/simple-select/simple-select.component.ts","webpack:///src/app/components/inputs/simple-select/simple-select.component.html","webpack:///src/app/components/loading-spinner/loading-spinner.component.ts","webpack:///src/app/components/loading-spinner/loading-spinner.component.html","webpack:///src/app/components/logo/logo.component.ts","webpack:///src/app/components/logo/logo.component.html","webpack:///src/app/components/mobile-menu/mobile-menu.component.ts","webpack:///src/app/components/mobile-menu/mobile-menu.component.html","webpack:///src/app/components/page-header/navigation/navigation.component.ts","webpack:///src/app/components/page-header/navigation/navigation.component.html","webpack:///src/app/components/page-header/notifications/notifications.component.ts","webpack:///src/app/components/page-header/notifications/notifications.component.html","webpack:///src/app/components/page-header/page-header.component.ts","webpack:///src/app/components/page-header/page-header.component.html","webpack:///src/app/components/page-header/user-profile/user-profile.component.ts","webpack:///src/app/components/radio-group/radio-group.component.ts","webpack:///src/app/components/radio-group/radio-group.component.html","webpack:///src/app/components/recipe-card/recipe-card.component.ts","webpack:///src/app/components/recipe-card/recipe-card.component.html","webpack:///src/app/components/result-card/result-card.component.ts","webpack:///src/app/components/result-card/result-card.component.html","webpack:///src/app/components/sidebar/editors/manage-regions-areas/manage-regions-areas.component.ts","webpack:///src/app/components/sidebar/editors/manage-regions-areas/manage-regions-areas.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/components/table/check-box-table/check-box-table.component.ts","webpack:///src/app/components/table/check-box-table/check-box-table.component.html","webpack:///src/app/components/table/radio-table/radio-table.component.ts","webpack:///src/app/components/table/radio-table/radio-table.component.html","webpack:///src/app/components/table/table.component.ts","webpack:///src/app/components/table/table.component.html","webpack:///src/app/directives/directives.module.ts","webpack:///src/app/directives/if-role.directive.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/pages/dashboard2/dashboard2-routing.module.ts","webpack:///src/app/pages/dashboard2/dashboard2.component.ts","webpack:///src/app/pages/dashboard2/dashboard2.component.html","webpack:///src/app/pages/dashboard2/my-profile/my-profile.component.ts","webpack:///src/app/pages/dashboard2/my-profile/my-profile.component.html","webpack:///src/app/pages/dashboard2/recipe/recipe.component.ts","webpack:///src/app/pages/dashboard2/recipe/recipe.component.html","webpack:///src/app/pages/login-page/confirm-user/confirm-user.component.ts","webpack:///src/app/pages/login-page/confirm-user/confirm-user.component.html","webpack:///src/app/pages/login-page/forgot-password/forgot-password.component.ts","webpack:///src/app/pages/login-page/forgot-password/forgot-password.component.html","webpack:///src/app/pages/login-page/register-page/register-page.component.ts","webpack:///src/app/pages/login-page/register-page/register-page.component.html","webpack:///src/app/pages/login-page/reset-password/reset-password.component.ts","webpack:///src/app/pages/login-page/reset-password/reset-password.component.html","webpack:///src/app/pages/refresh/refresh.component.ts","webpack:///src/app/pages/refresh/refresh.component.html","webpack:///src/app/pipes/ingredients-filter.pipe.ts","webpack:///src/app/pipes/initials.pipe.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/navigation.service.ts","webpack:///src/app/services/rescipes-service.service.ts","webpack:///src/app/services/sidebars.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/unit.service.ts","webpack:///src/backend-mock/auth/users.ts","webpack:///src/backend-mock/data/index.ts","webpack:///src/backend-mock/data/mixes.ts","webpack:///src/backend-mock/data/regions-areas.ts","webpack:///src/backend-mock/interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/environments/navigation.config.ts","webpack:///src/environments/units.config.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","canActivate","children","loadChildren","m","DashboardPageModule","matcher","url","match","consumed","LoginPageModule","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","components","ComponentsModule","ContainerHeaderComponent","ErrorMessageComponent","FoodIconComponent","changeStatus","statut","string","charAt","toUpperCase","slice","status","name","emit","HeaderComponent","router","route","authenticationService","sidebar","unitsService","userName","menu","isOpen","userId","snapshot","paramMap","get","pages","title","console","log","getData","subscribe","res","localStorage","removeItem","navigate","navigateByUrl","skipLocationChange","toggl","logout","reset","CalendarComponent","DownloadComponent","FullScreenComponent","IconsModule","LetterComponent","UploadComponent","Upload2Component","CheckboxComponent","check","DatePickerComponent","selectedDate","DateRangePickerComponent","calendar","formatter","hoveredDate","fromDate","getToday","toDate","getNext","date","after","before","equals","isInside","isHovered","myDate","day","month","year","currentValue","input","parsed","parse","isValid","from","onDateSelection","NgbDateCustomParserFormatter","value","dateParts","trim","split","length","isNumber","toInteger","isNaN","parseInt","padNumber","InputsModule","SearchFieldComponent","getInput","SelectComponent","vcr","zone","cdr","labelKey","idKey","options","selectedChange","closed","originalOptions","selected","find","currentOption","dropdownTpl","origin","view","createEmbeddedView","dropdown","rootNodes","document","body","appendChild","style","width","offsetWidth","runOutsideAngular","popperRef","removeOnDestroy","handleClickOutside","destroy","option","pipe","target","reference","contains","close","detectChanges","open","changeDetection","OnPush","SimpleInputComponent","getInputStatus","SimpleSelectComponent","myLabel","LoadingSpinnerComponent","LogoComponent","MobileMenuComponent","classList","NavigationComponent","nav","isActive","parseUrl","toggleMenu","NotificationsComponent","hasNotifications","$event","PageHeaderComponent","regionData","area","region","areas","regions","changeRegion","type","d","change","editor","units","currentUnit","UserProfileComponent","user","RadioGroupComponent","pageSelected","RecipeCardComponent","recipesService","userService","remove","getRecipe","label","addWishList","_id","deleteWishList","wishList","item","ResultCardComponent","ManageRegionsAreasComponent","SidebarComponent","service","next","state","sub","visible","Boolean","unsubscribe","CheckBoxTableComponent","tanksMap","Map","checkedTank","data","set","RadioTableComponent","tanks","mixesToShow","space","labels","ch","description","i","colors","randomColor","Math","floor","random","TableComponent","DirectivesModule","IfRoleDirective","templateRef","viewContainer","auth","hasView","role$","checkRoles","bind","updateView","expected","some","role","roles","indexOf","condition","clear","AuthGuard","getItem","providedIn","Dashboard2RoutingModule","forChild","Dashboard2Component","MyProfileComponent","window","innerWidth","loading","event","arr","pop","recipes","lastReasearch","host","RecipeComponent","ingredientsMap","noSearch","notFound","searchString","ingredients","booleanString","key","getRecipes","addLastReasearch","ConfirmUserComponent","success","resultMessage","token","checkConfimationToken","err","form","confirmUser","ForgotPasswordComponent","error","errorMessage","emailStatus","sendResetEmail","email","message","RegisterPageComponent","authService","password1Status","password2Status","userNameStatus","password1","password2","password","register","createConfirmToken","ResetPasswordComponent","failure","checkToken","resetPassword","RefreshComponent","IngredientsFilterPipe","filter","it","ingredient","includes","InitialsPipe","map","join","PipesModule","api","HOST_URL","BASE_PATH","ApiService","http","handleError","post","errMsg","statusText","localUser","JSON","AuthService","user$","asObservable","fetch","u","isAdmin","username","setItem","stringify","getValue","AuthenticationService","localHost","ErrorEvent","navigationConfig","NavigationService","routes$","updateRoutes","userRoles","RescipesServiceService","userUrl","ingredientString","recipeId","recipe","label1","SidebarsService","state$","TokenInterceptorService","injector","tokenizedReq","clone","headers","handle","UnitService","unit$","unit","sourceUnit","users","fullName","avatar","description1","percentage","description2","description3","description4","Mixes","sn","productName","BackendInterceptor","request","endsWith","method","filteredUsers","undefined","fakeBackendProvider","environment","production","adminRoutes","schedulerRoutes","marketerRoutes","navigation","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {\n  Routes,\n  RouterModule,\n  UrlSegment,\n  UrlMatchResult,\n} from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterPageComponent } from './pages/login-page/register-page/register-page.component';\nimport { Dashboard2Component } from './pages/dashboard2/dashboard2.component';\nimport { RecipeComponent } from './pages/dashboard2/recipe/recipe.component';\nimport { MyProfileComponent } from './pages/dashboard2/my-profile/my-profile.component';\nimport { RefreshComponent } from './pages/refresh/refresh.component';\nimport { ForgotPasswordComponent } from './pages/login-page/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './pages/login-page/reset-password/reset-password.component';\nimport { ConfirmUserComponent } from './pages/login-page/confirm-user/confirm-user.component';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    canActivate: [AuthGuard],\n    children: [\n      // routes that need authentication\n      {\n        path: '',\n        loadChildren: () =>\n          import('./pages/dashboard-page/dashboard-page.module').then(\n            (m) => m.DashboardPageModule\n          ),\n      },\n    ],\n  },\n\n  {\n    /**\n     * Authentication routes: login& logout\n     * need to use the matcher to not consume the \"login\" and \"logout\" segments\n     */\n    matcher: (url: UrlSegment[]) =>\n      (url[0]?.path.match(/^(login|logout)/)\n        ? { consumed: [] }\n        : null) as UrlMatchResult,\n    loadChildren: () =>\n      import('./pages/login-page/login-page.module').then(\n        (m) => m.LoginPageModule\n      ),\n  },\n  {\n    path: 'dashboardPage/:userId',\n    component: Dashboard2Component,\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'searchRecipe/:userId', component: RecipeComponent },\n      { path: 'myProfile/:userId', component: MyProfileComponent },\n    ],\n  },\n  { path: 'refresh', component: RefreshComponent, canActivate: [AuthGuard] },\n  {\n    path: 'register',\n    component: RegisterPageComponent,\n  },\n  {\n    path: 'forgotPassword',\n    component: ForgotPasswordComponent,\n  },\n  {\n    path: 'resetPassword/:token',\n    component: ResetPasswordComponent,\n  },\n  {\n    path: 'confirmUser/:token',\n    component: ConfirmUserComponent,\n  },\n  { path: '**', redirectTo: 'login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// http interceptors\nimport { fakeBackendProvider } from '../backend-mock/interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RegisterPageComponent } from './pages/login-page/register-page/register-page.component';\nimport { FormsModule } from '@angular/forms';\nimport { InputsModule } from './components/inputs/inputs.module';\nimport { ComponentsModule } from './components/components.module';\nimport { Dashboard2Component } from './pages/dashboard2/dashboard2.component';\nimport { RecipeComponent } from './pages/dashboard2/recipe/recipe.component';\nimport { MyProfileComponent } from './pages/dashboard2/my-profile/my-profile.component';\nimport { Dashboard2RoutingModule } from './pages/dashboard2/dashboard2-routing.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PipesModule } from './pipes/pipes.module';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { RefreshComponent } from './pages/refresh/refresh.component';\nimport { AuthGuard } from './guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterPageComponent,\n    Dashboard2Component,\n    RecipeComponent,\n    MyProfileComponent,\n    RefreshComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    InputsModule,\n    ComponentsModule,\n    Dashboard2RoutingModule,\n    FlexLayoutModule,\n    PipesModule,\n  ],\n\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n    AuthGuard,\n    // provider used to create fake backend\n    fakeBackendProvider,\n  ],\n\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { PipesModule } from '../pipes/pipes.module';\nimport { DirectivesModule } from '../directives/directives.module';\nimport { InputsModule } from './inputs/inputs.module';\n\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { NavigationComponent } from './page-header/navigation/navigation.component';\nimport { LogoComponent } from './logo/logo.component';\nimport { NotificationsComponent } from './page-header/notifications/notifications.component';\nimport { UserProfileComponent } from './page-header/user-profile/user-profile.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ManageRegionsAreasComponent } from './sidebar/editors/manage-regions-areas/manage-regions-areas.component';\nimport { MobileMenuComponent } from './mobile-menu/mobile-menu.component';\nimport { ContainerHeaderComponent } from './container-header/container-header.component';\n\nimport { RadioGroupComponent } from './radio-group/radio-group.component';\nimport { TableComponent } from './table/table.component';\nimport {\n  NgbModule,\n  NgbDatepicker,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { CheckBoxTableComponent } from './table/check-box-table/check-box-table.component';\nimport { IconsModule } from './icons/icons.module';\nimport { RadioTableComponent } from './table/radio-table/radio-table.component';\nimport { FormsModule } from '@angular/forms';\nimport { ResultCardComponent } from './result-card/result-card.component';\nimport { ErrorMessageComponent } from './error-message/error-message.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FoodIconComponent } from './food-icon/food-icon.component';\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\nimport { RecipeCardComponent } from './recipe-card/recipe-card.component';\n\nconst components = [\n  PageHeaderComponent,\n  NavigationComponent,\n  SidebarComponent,\n\n  LogoComponent,\n  ResultCardComponent,\n  ContainerHeaderComponent,\n  RadioGroupComponent,\n  TableComponent,\n  RadioTableComponent,\n  CheckBoxTableComponent,\n  ErrorMessageComponent,\n  NotificationsComponent,\n  UserProfileComponent,\n  ManageRegionsAreasComponent,\n  MobileMenuComponent,\n  ResultCardComponent,\n  HeaderComponent,\n  FoodIconComponent,\n  LoadingSpinnerComponent,\n  RecipeCardComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  exports: [...components, ContainerHeaderComponent],\n\n  imports: [\n    CommonModule,\n    RouterModule,\n    PipesModule,\n    DirectivesModule,\n    InputsModule,\n    NgbModule,\n    IconsModule,\n    FormsModule,\n  ],\n})\nexport class ComponentsModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-container-header',\n  templateUrl: './container-header.component.html',\n  styleUrls: ['./container-header.component.scss'],\n})\nexport class ContainerHeaderComponent implements OnInit {\n  @Input() title: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <span class=\"title\">{{ this.title }}</span>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.scss'],\n})\nexport class ErrorMessageComponent implements OnInit {\n  @Input() message: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<small class=\"alert-warning d-flex justify-content-center\">{{\n  this.message\n}}</small>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-food-icon',\n  templateUrl: './food-icon.component.html',\n  styleUrls: ['./food-icon.component.scss'],\n})\nexport class FoodIconComponent implements OnInit {\n  @Input() height: string;\n  @Input() icon: string;\n  @Input() width: number;\n  @Output() changeStatus = new EventEmitter();\n  constructor() {}\n  statut = false;\n  @Input() name: string;\n  capitalizeFirstLetter(string: any) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  ngOnInit(): void {}\n  changeStatut() {\n    this.statut = !this.statut;\n    const status: string = this.name + ',' + this.statut;\n    this.changeStatus.emit(status);\n  }\n}\n","<div\n  *ngIf=\"this.statut == false\"\n  (click)=\"changeStatut()\"\n  class=\"container\"\n  [ngStyle]=\"{ height: this.height }\"\n>\n  <div\n    class=\"content\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(../../../assets/ingredients/' + this.icon + '.svg)'\n    }\"\n  ></div>\n  <div class=\"d-flex justify-content-center name\">\n    {{ this.capitalizeFirstLetter(this.name) }}\n  </div>\n</div>\n<div\n  *ngIf=\"this.statut == true\"\n  (click)=\"changeStatut()\"\n  class=\"container1\"\n  [ngStyle]=\"{ height: this.height }\"\n>\n  <div\n    class=\"content1\"\n    [ngStyle]=\"{\n      'background-image':\n        'url(../../../assets/ingredients/' + this.icon + '.svg)'\n    }\"\n  ></div>\n  <div class=\"d-flex justify-content-center name1\">\n    {{ this.capitalizeFirstLetter(this.name) }}\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { SidebarsService } from 'src/app/services/sidebars.service';\nimport { UnitService } from 'src/app/services/unit.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Input() user: any;\n  userId: any;\n  userName: string = '';\n  pages: any;\n  public menu = {\n    isOpen: false,\n  };\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n  }\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService,\n    private sidebar: SidebarsService,\n    private unitsService: UnitService\n  ) {\n    this.userId = this.route.snapshot.paramMap.get('userId');\n    this.pages = [\n      { title: 'Search Recipe', path: 'searchRecipe/' + this.userId },\n      { title: 'My Profile', path: 'myProfile/' + this.userId },\n    ];\n    console.log(this.userId);\n    this.authenticationService.getData(this.userId).subscribe((res: any) => {\n      this.userName = res.userName;\n    });\n  }\n  reset() {\n    this.router\n      .navigateByUrl('refresh', { skipLocationChange: true })\n      .then(() => {\n        this.router.navigateByUrl(\n          'dashboardPage/' + this.userId + '/searchRecipe/' + this.userId\n        );\n      });\n  }\n  /**\n   * Toggle mobile menu\n   * @param toggl Show or hide menu\n   */\n  toggleMenu(toggl?: boolean) {\n    const { isOpen } = this.menu;\n\n    this.menu.isOpen = typeof toggl === 'boolean' ? toggl : !isOpen;\n  }\n}\n","<div class=\"wrap\">\n  <div style=\"padding: 25px;\">\n    <div class=\"flex center is-mobile\" [hidden]=\"!menu.isOpen\">\n      <app-logo type=\"form\"></app-logo>\n    </div>\n\n    <div style=\"display: flex; flex-direction: row-reverse;\">\n      <app-logo\n        type=\"form\"\n        style=\"\n          position: absolute;\n          left: 50%;\n          transform: translate(-52%, -15%);\n          margin-bottom: 5px;\n        \"\n      ></app-logo>\n      <div class=\"user-data flex\">\n        <span class=\"mr-2\" id=\"userName\">{{ this.userName }}</span>\n        <span (click)=\"logout()\" style=\"display: inline-block;\">\n          <i class=\"fa fa-sign-out\"></i\n        ></span>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"content-wrap nav-wrap\"\n    style=\"padding-top: 20px; padding-bottom: 20px;\"\n  >\n    <nav>\n      <ul>\n        <li *ngFor=\"let page of pages\">\n          <a\n            [routerLink]=\"[page.path]\"\n            routerLinkActive=\"active\"\n            (click)=\"toggleMenu(false)\"\n            >{{ page.title }}</a\n          >\n        </li>\n      </ul>\n    </nav>\n    <button (click)=\"reset()\" class=\"btn primary add-transaction-btn\">\n      <span class=\"fa fa-refresh\" id=\"refreshIcon\"></span>\n      <span class=\"is-not-mobile\">Refresh</span>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"16\"\n  height=\"16\"\n  viewBox=\"0 0 16 16\"\n>\n  <rect class=\"a\" width=\"16\" height=\"16\" />\n  <path\n    class=\"b\"\n    d=\"M1.333,14.667A1.334,1.334,0,0,1,0,13.334v-10A1.335,1.335,0,0,1,1.333,2H2V0H4.666V2h4V0h2.667V2H12a1.335,1.335,0,0,1,1.333,1.333v10A1.335,1.335,0,0,1,12,14.667Zm0-1.333H12V6H1.333Z\"\n    transform=\"translate(1.333 0.666)\"\n  />\n</svg>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-download',\n  templateUrl: './download.component.html',\n  styleUrls: ['./download.component.scss']\n})\nexport class DownloadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"14\"\n  height=\"14\"\n  viewBox=\"0 0 14 14\"\n>\n  <rect class=\"a\" width=\"14\" height=\"14\" />\n  <path\n    class=\"b\"\n    d=\"M8.749,10.5H0V7H1.75v1.75h7V7H10.5v3.5Zm-7-6.126H3.5V0H7V4.373h1.75l-3.5,3.5Z\"\n    transform=\"translate(1.75 2.625)\"\n  />\n</svg>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-full-screen',\n  templateUrl: './full-screen.component.html',\n  styleUrls: ['./full-screen.component.scss']\n})\nexport class FullScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"14\"\n  height=\"14\"\n  viewBox=\"0 0 14 14\"\n>\n  <path\n    class=\"a\"\n    d=\"M12.167,8.25H11V10H9.25v1.167h2.917ZM7.5,6.5H9.25V5.333H6.333V8.25H7.5ZM13.333,3H5.167A1.17,1.17,0,0,0,4,4.167v8.167A1.17,1.17,0,0,0,5.167,13.5h8.167A1.17,1.17,0,0,0,14.5,12.333V4.167A1.17,1.17,0,0,0,13.333,3Zm0,9.339H5.167V4.161h8.167Z\"\n    transform=\"translate(-2.25 -1.25)\"\n  />\n  <path class=\"b\" d=\"M0,0H14V14H0Z\" />\n</svg>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadComponent } from './upload/upload.component';\nimport { LetterComponent } from './letter/letter.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { Upload2Component } from './upload2/upload2.component';\nimport { DownloadComponent } from './download/download.component';\nimport { FullScreenComponent } from './full-screen/full-screen.component';\n\n@NgModule({\n  declarations: [\n    UploadComponent,\n    LetterComponent,\n    CalendarComponent,\n    Upload2Component,\n    DownloadComponent,\n    FullScreenComponent,\n  ],\n  imports: [CommonModule],\n  exports: [\n    UploadComponent,\n    LetterComponent,\n    CalendarComponent,\n    Upload2Component,\n    DownloadComponent,\n    FullScreenComponent,\n  ],\n})\nexport class IconsModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-letter',\n  templateUrl: './letter.component.html',\n  styleUrls: ['./letter.component.scss']\n})\nexport class LetterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"14\"\n  height=\"14\"\n  viewBox=\"0 0 14 14\"\n>\n  <rect class=\"a\" width=\"14\" height=\"14\" />\n  <path\n    class=\"b\"\n    d=\"M11.25,8.75H1a1,1,0,0,1-1-1V1A1,1,0,0,1,1,0H11.25a1,1,0,0,1,1,1V7.75A1,1,0,0,1,11.25,8.75Zm-9.5-7,4.375,3.5L10.5,1.75Z\"\n    transform=\"translate(0.875 2.625)\"\n  />\n</svg>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss']\n})\nexport class UploadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"14\"\n  height=\"14\"\n  viewBox=\"0 0 14 14\"\n>\n  <rect class=\"a\" width=\"14\" height=\"14\" />\n  <path\n    class=\"b\"\n    d=\"M0,10.5V7H1.75v1.75h7V7H10.5v3.5ZM3.5,7.873V3.5H1.75L5.249,0l3.5,3.5H7V7.873Z\"\n    transform=\"translate(1.75 2.625)\"\n  />\n</svg>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload2',\n  templateUrl: './upload2.component.html',\n  styleUrls: ['./upload2.component.scss']\n})\nexport class Upload2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"14\"\n  height=\"14\"\n  viewBox=\"0 0 14 14\"\n>\n  <rect class=\"a\" width=\"14\" height=\"14\" />\n  <path\n    class=\"b\"\n    d=\"M0,10.5V7H1.75v1.75h7V7H10.5v3.5ZM3.5,7.873V3.5H1.75L5.249,0l3.5,3.5H7V7.873Z\"\n    transform=\"translate(1.75 2.625)\"\n  />\n</svg>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent implements OnInit {\n  @Output() check = new EventEmitter();\n  @Input() checked: boolean;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<label>\n  <input\n    type=\"checkbox\"\n    class=\"oldCheckbox\"\n    name=\"checkbox\"\n    [checked]=\"this.checked\"\n  />\n  <span class=\"checkmark\"></span>\n</label>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {\n  NgbDateStruct,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateCustomParserFormatter } from '../dateformat';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.scss'],\n  providers: [\n    { provide: NgbDateParserFormatter, useClass: NgbDateCustomParserFormatter },\n  ],\n})\nexport class DatePickerComponent implements OnInit {\n  constructor() {}\n  model: NgbDateStruct;\n  @Output() selectedDate = new EventEmitter<NgbDateStruct>();\n  ngOnInit(): void {}\n}\n","<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n      <input\n        class=\"form-control\"\n        placeholder=\"dd/mm/yyyy\"\n        name=\"dp\"\n        [(ngModel)]=\"model\"\n        ngbDatepicker\n        #d=\"ngbDatepicker\"\n        (ngModelChange)=\"this.selectedDate.emit(model)\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary calendar\"\n          (click)=\"d.toggle()\"\n          type=\"button\"\n        >\n          <app-calendar></app-calendar>\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  NgbDate,\n  NgbCalendar,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-date-range-picker',\n  templateUrl: './date-range-picker.component.html',\n  styleUrls: ['./date-range-picker.component.scss'],\n})\nexport class DateRangePickerComponent {\n  hoveredDate: NgbDate | null = null;\n\n  fromDate: NgbDate | null;\n  toDate: NgbDate | null;\n\n  constructor(\n    private calendar: NgbCalendar,\n    public formatter: NgbDateParserFormatter\n  ) {\n    this.fromDate = calendar.getToday();\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (\n      this.fromDate &&\n      !this.toDate &&\n      date &&\n      date.after(this.fromDate)\n    ) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n  formatDate(date: any) {\n    const myDate: string = date.day + '/' + date.month + '/' + date.year;\n    return myDate;\n  }\n  validateInput(currentValue: NgbDate | null, input: string): NgbDate | null {\n    const parsed = this.formatter.parse(input);\n    return parsed && this.calendar.isValid(NgbDate.from(parsed))\n      ? NgbDate.from(parsed)\n      : currentValue;\n  }\n}\n","<form class=\"form-inline\">\n  <div class=\"form-group hidden\">\n    <div class=\"input-group\">\n      <input\n        name=\"datepicker\"\n        class=\"form-control\"\n        ngbDatepicker\n        #datepicker=\"ngbDatepicker\"\n        [autoClose]=\"'outside'\"\n        (dateSelect)=\"onDateSelection($event)\"\n        [displayMonths]=\"2\"\n        [dayTemplate]=\"t\"\n        outsideDays=\"hidden\"\n        [startDate]=\"fromDate!\"\n      />\n      <ng-template #t let-date let-focused=\"focused\">\n        <span\n          class=\"custom-day\"\n          [class.focused]=\"focused\"\n          [class.range]=\"isRange(date)\"\n          [class.faded]=\"isHovered(date) || isInside(date)\"\n          (mouseenter)=\"hoveredDate = date\"\n          (mouseleave)=\"hoveredDate = null\"\n        >\n          {{ date.day }}\n        </span>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"form-control\" id=\"exampleFormControlInput1\">\n    {{ this.formatDate(fromDate) }} - {{ this.formatDate(toDate) }}\n    <span class=\"calendarIcon\"\n      ><app-calendar (click)=\"datepicker.open()\"></app-calendar\n    ></span>\n  </div>\n</form>\n\n<!-- <form class=\"form-inline\">\n  <div class=\"form-group hidden\">\n    <div class=\"input-group\">\n      <input\n        name=\"datepicker\"\n        class=\"form-control\"\n        ngbDatepicker\n        #datepicker=\"ngbDatepicker\"\n        [autoClose]=\"'outside'\"\n        (dateSelect)=\"onDateSelection($event)\"\n        [displayMonths]=\"2\"\n        [dayTemplate]=\"t\"\n        outsideDays=\"hidden\"\n        [startDate]=\"fromDate!\"\n      />\n      <ng-template #t let-date let-focused=\"focused\">\n        <span\n          class=\"custom-day\"\n          [class.focused]=\"focused\"\n          [class.range]=\"isRange(date)\"\n          [class.faded]=\"isHovered(date) || isInside(date)\"\n          (mouseenter)=\"hoveredDate = date\"\n          (mouseleave)=\"hoveredDate = null\"\n        >\n          {{ date.day }}\n        </span>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"form-group ml-2\">\n    <div class=\"input-group\">\n      <input\n        #dpToDate\n        class=\"form-control\"\n        placeholder=\"yyyy-mm-dd\"\n        name=\"dpToDate\"\n        [value]=\"\n          this.formatDate(toDate) + ' ' + '-' + ' ' + this.formatDate(fromDate)\n        \"\n        (input)=\"toDate = validateInput(toDate, dpToDate.value)\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary calendar\"\n          (click)=\"datepicker.toggle()\"\n          type=\"button\"\n        ></button>\n      </div>\n    </div>\n  </div>\n</form> -->\n","import {\n  NgbDateParserFormatter,\n  NgbDateStruct,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgbDateCustomParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('/');\n      if (dateParts.length === 1 && this.isNumber(dateParts[0])) {\n        return { day: this.toInteger(dateParts[0]), month: 0, year: 0 };\n      } else if (\n        dateParts.length === 2 &&\n        this.isNumber(dateParts[0]) &&\n        this.isNumber(dateParts[1])\n      ) {\n        return {\n          day: this.toInteger(dateParts[0]),\n          month: this.toInteger(dateParts[1]),\n          year: 0,\n        };\n      } else if (\n        dateParts.length === 3 &&\n        this.isNumber(dateParts[0]) &&\n        this.isNumber(dateParts[1]) &&\n        this.isNumber(dateParts[2])\n      ) {\n        return {\n          day: this.toInteger(dateParts[0]),\n          month: this.toInteger(dateParts[1]),\n          year: this.toInteger(dateParts[2]),\n        };\n      }\n    }\n    return { day: 0, month: 0, year: 0 };\n  }\n\n  isNumber(value: any): value is number {\n    return !isNaN(this.toInteger(value));\n  }\n\n  toInteger(value: any): number {\n    return parseInt(`${value}`, 10);\n  }\n  padNumber(value: number) {\n    if (this.isNumber(value)) {\n      return `0${value}`.slice(-2);\n    } else {\n      return '';\n    }\n  }\n\n  format(date: NgbDateStruct): string {\n    return date\n      ? `${this.isNumber(date.day) ? this.padNumber(date.day) : ''}/${\n          this.isNumber(date.month) ? this.padNumber(date.month) : ''\n        }/${date.year}`\n      : '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SelectComponent } from './select/select.component';\nimport { SimpleSelectComponent } from './simple-select/simple-select.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { ComponentsModule } from '../components.module';\nimport { IconsModule } from '../icons/icons.module';\nimport {\n  NgbDatepicker,\n  NgbDateParserFormatter,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { DateRangePickerComponent } from './date-range-picker/date-range-picker.component';\nimport { SimpleInputComponent } from './simple-input/simple-input.component';\nimport { SearchFieldComponent } from './search-field/search-field.component';\n@NgModule({\n  declarations: [\n    SelectComponent,\n    SimpleSelectComponent,\n    CheckboxComponent,\n    DatePickerComponent,\n    DateRangePickerComponent,\n    SimpleInputComponent,\n    SearchFieldComponent,\n  ],\n  exports: [\n    SelectComponent,\n    SimpleSelectComponent,\n    CheckboxComponent,\n    DatePickerComponent,\n    DateRangePickerComponent,\n    SimpleInputComponent,\n    SearchFieldComponent,\n  ],\n  imports: [CommonModule, NgbModule, FormsModule, IconsModule],\n})\nexport class InputsModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-search-field',\n  templateUrl: './search-field.component.html',\n  styleUrls: ['./search-field.component.scss'],\n})\nexport class SearchFieldComponent implements OnInit {\n  @Input() placeholder: string;\n  @Output() getInput = new EventEmitter<string>();\n  @Input() width: string;\n  constructor() {}\n\n  getInputValue(value: string) {\n    this.getInput.emit(value);\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"inputWithIcon\" [ngStyle]=\"{ width: this.width }\">\n  <input\n    (ngModelChange)=\"this.getInputValue($event)\"\n    [placeholder]=\"this.placeholder\"\n    ngModel\n  />\n  <i\n    style=\"\n      position: absolute;\n      left: 0;\n      top: 6px;\n      padding: 9px 8px;\n      color: #aaa;\n      transition: 0.3s;\n    \"\n    class=\"fa fa-search\"\n    aria-hidden=\"true\"\n  ></i>\n  <div></div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EmbeddedViewRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  NgZone\n} from '@angular/core';\n\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { fromEvent } from 'rxjs';\nimport Popper from 'popper.js';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectComponent implements OnInit {\n  @Input() selected: any;\n  @Input() labelKey = 'label';\n  @Input() idKey = 'id';\n  @Input() options: Array<any> = [];\n  @Input() optionTpl: TemplateRef<any>;\n  @Input() icon: string;\n  @Output() selectedChange = new EventEmitter();\n  @Output() closed = new EventEmitter();\n\n  private view: EmbeddedViewRef<any>|null;\n  private popperRef: Popper|null;\n  private originalOptions: Array<any> = [];\n\n  constructor(private vcr: ViewContainerRef, private zone: NgZone, private cdr: ChangeDetectorRef) {}\n\n  get isOpen() {\n    return !!this.popperRef;\n  }\n\n  ngOnInit() {\n    this.originalOptions = [...this.options];\n\n    if (typeof this.selected === 'string') {\n      this.selected = this.options.find(currentOption => currentOption[this.idKey] === this.selected);\n    }\n  }\n\n  get label() {\n    return this.selected ? this.selected[this.labelKey] : 'Select...';\n  }\n\n  /**\n   * Open the select dropdown\n   * @param dropdownTpl template for the dropdown\n   * @param origin anchor element\n   */\n  open(dropdownTpl: TemplateRef<any>, origin: HTMLElement) {\n    if (this.view) {\n      return;\n    }\n\n    this.view = this.vcr.createEmbeddedView(dropdownTpl);\n    const dropdown = this.view.rootNodes[0];\n\n    document.body.appendChild(dropdown);\n    dropdown.style.width = `${origin.offsetWidth}px`;\n\n    this.zone.runOutsideAngular(() => {\n      this.popperRef = new Popper(origin, dropdown, {\n        removeOnDestroy: true\n      });\n    });\n\n    this.handleClickOutside();\n  }\n\n  /**\n   * Close the select dropdown\n   */\n  close() {\n    this.closed.emit();\n    this.popperRef?.destroy();\n    this.view?.destroy();\n    this.view = null;\n    this.popperRef = null;\n  }\n\n  /**\n   * Select an option\n   * @param option Option to select\n   */\n  select(option: any) {\n    this.selected = option;\n    this.selectedChange.emit(option[this.idKey]);\n  }\n\n  /**\n   * Check if option is active\n   * @param option Option to check\n   */\n  isActive(option: any) {\n    if (!this.selected) {\n      return false;\n    }\n    return option[this.idKey] === this.selected[this.idKey];\n  }\n\n  /**\n   * Hide dropdown when clicking outside\n   */\n  private handleClickOutside() {\n    fromEvent(document, 'click')\n      .pipe(\n        filter(({ target }) => {\n          const origin = this.popperRef?.reference as HTMLElement;\n          return origin.contains(target as HTMLElement) === false;\n        }),\n        takeUntil(this.closed)\n      )\n      .subscribe(() => {\n        this.close();\n        this.cdr.detectChanges();\n      });\n  }\n}\n","<div class=\"dropdown\">\n  <button type=\"button\" class=\"select-trigger\" (click)=\"open(dropdown, origin)\" #origin [class.is-open]=\"isOpen\">\n    <span class=\"ic ic-{{icon}}\" *ngIf=\"icon\"></span>\n    {{ label }}\n    <div class=\"down-icon\"></div>\n  </button>\n\n  <ng-template #dropdown>\n    <div class=\"select-menu\">\n      <div class=\"select-menu-inner\">\n        <div\n          *ngFor=\"let option of options\"\n          class=\"select-item\"\n          [class.active]=\"isActive(option)\"\n          (click)=\"select(option)\"\n        >\n          <ng-template [ngIf]=\"!optionTpl\">{{option[labelKey]}}</ng-template>\n          <ng-template *ngTemplateOutlet=\"optionTpl; context: {$implicit: option}\"></ng-template>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-input',\n  templateUrl: './simple-input.component.html',\n  styleUrls: ['./simple-input.component.scss'],\n})\nexport class SimpleInputComponent implements OnInit {\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Output() getInput = new EventEmitter<string>();\n  @Input() inputValue: string;\n  @Input() type: string;\n  @Input() icon: string;\n  @Input() name: string;\n  @Input() required: boolean;\n  @Input() pattern: string;\n  @Output() getInputStatus = new EventEmitter<boolean>();\n  constructor() {}\n  getInputValue(value: string) {\n    this.getInput.emit(value);\n  }\n  getStatus(value: any) {\n    if (value == null) { this.getInputStatus.emit(true); }\n    else { this.getInputStatus.emit(value); }\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"inputWithIcon\">\n  <label>{{ this.label }}</label>\n  <input\n    [type]=\"this.type\"\n    (ngModelChange)=\"this.getInputValue($event)\"\n    (ngModelChange)=\"this.getStatus(input.invalid)\"\n    [ngModel]=\"this.inputValue\"\n    [name]=\"this.name\"\n    [placeholder]=\"this.placeholder\"\n    ngModel\n    #input=\"ngModel\"\n    [required]=\"this.required\"\n    [pattern]=\"this.pattern\"\n  />\n  <i\n    *ngIf=\"this.icon.toLowerCase() == 'email'\"\n    class=\"fa fa-envelope\"\n    aria-hidden=\"true\"\n  ></i>\n  <i\n    *ngIf=\"this.icon.toLowerCase() == 'password'\"\n    class=\"fa fa-unlock-alt\"\n    aria-hidden=\"true\"\n  ></i>\n  <i\n    *ngIf=\"this.icon.toLowerCase() == 'person'\"\n    class=\"fa fa-user\"\n    aria-hidden=\"true\"\n  ></i>\n  <small\n    *ngIf=\"input.invalid && input.touched\"\n    class=\"alert-warning d-flex justify-content-center\"\n    >Invalid Input</small\n  >\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  TemplateRef,\n  Output,\n  EventEmitter,\n  EmbeddedViewRef,\n  ViewContainerRef,\n  NgZone,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport Popper from 'popper.js';\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-simple-select',\n  templateUrl: './simple-select.component.html',\n  styleUrls: ['./simple-select.component.scss'],\n})\nexport class SimpleSelectComponent implements OnInit {\n  @Input() selected: any;\n  @Input() labelKey = 'label';\n  @Input() idKey = 'id';\n  @Input() options: Array<any> = [];\n  @Input() optionTpl: TemplateRef<any>;\n  @Input() icon: string;\n  @Output() selectedChange = new EventEmitter();\n  @Output() closed = new EventEmitter();\n  @Input() myLabel: string;\n  private view: EmbeddedViewRef<any> | null;\n  private popperRef: Popper | null;\n  private originalOptions: Array<any> = [];\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private zone: NgZone,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  get isOpen() {\n    return !!this.popperRef;\n  }\n\n  ngOnInit() {\n    this.originalOptions = [...this.options];\n\n    if (typeof this.selected === 'string') {\n      this.selected = this.options.find(\n        (currentOption) => currentOption[this.idKey] === this.selected\n      );\n    }\n  }\n\n  get label() {\n    return this.selected ? this.selected[this.labelKey] : this.myLabel;\n  }\n\n  /**\n   * Open the select dropdown\n   * @param dropdownTpl template for the dropdown\n   * @param origin anchor element\n   */\n  open(dropdownTpl: TemplateRef<any>, origin: HTMLElement) {\n    if (this.view) {\n      return;\n    }\n\n    this.view = this.vcr.createEmbeddedView(dropdownTpl);\n    const dropdown = this.view.rootNodes[0];\n\n    document.body.appendChild(dropdown);\n    dropdown.style.width = `${origin.offsetWidth}px`;\n\n    this.zone.runOutsideAngular(() => {\n      this.popperRef = new Popper(origin, dropdown, {\n        removeOnDestroy: true,\n      });\n    });\n\n    this.handleClickOutside();\n  }\n\n  /**\n   * Close the select dropdown\n   */\n  close() {\n    this.closed.emit();\n    this.popperRef?.destroy();\n    this.view?.destroy();\n    this.view = null;\n    this.popperRef = null;\n  }\n\n  /**\n   * Select an option\n   * @param option Option to select\n   */\n  select(option: any) {\n    this.selected = option;\n    this.selectedChange.emit(option[this.idKey]);\n  }\n\n  /**\n   * Check if option is active\n   * @param option Option to check\n   */\n  isActive(option: any) {\n    if (!this.selected) {\n      return false;\n    }\n    return option[this.idKey] === this.selected[this.idKey];\n  }\n\n  /**\n   * Hide dropdown when clicking outside\n   */\n  private handleClickOutside() {\n    fromEvent(document, 'click')\n      .pipe(\n        filter(({ target }) => {\n          const origin = this.popperRef?.reference as HTMLElement;\n          return origin.contains(target as HTMLElement) === false;\n        }),\n        takeUntil(this.closed)\n      )\n      .subscribe(() => {\n        this.close();\n        this.cdr.detectChanges();\n      });\n  }\n}\n","<div class=\"dropdown\">\n  <button\n    type=\"button\"\n    class=\"select-trigger\"\n    (click)=\"open(dropdown, origin)\"\n    #origin\n    [class.is-open]=\"isOpen\"\n  >\n    <span class=\"ic ic-{{ icon }}\" *ngIf=\"icon\"></span>\n    {{ label }}\n    <div class=\"down-icon\"></div>\n  </button>\n\n  <ng-template #dropdown>\n    <div class=\"select-menu\">\n      <div class=\"select-menu-inner\">\n        <div\n          *ngFor=\"let option of options\"\n          class=\"select-item\"\n          [class.active]=\"isActive(option)\"\n          (click)=\"select(option)\"\n        >\n          <ng-template [ngIf]=\"!optionTpl\">{{ option[labelKey] }}</ng-template>\n          <ng-template\n            *ngTemplateOutlet=\"optionTpl; context: { $implicit: option }\"\n          ></ng-template>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  templateUrl: './loading-spinner.component.html',\n  styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"lds-roller\">\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n  <div></div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss'],\n})\nexport class LogoComponent {\n  @Input() type: string;\n}\n","<a *ngIf=\"this.type == 'navigation'\" href=\"/\" class=\"logo\">\n  <img src=\"/assets/i/myLogo.png\" alt=\"custFood\" />\n</a>\n<a *ngIf=\"this.type == 'form'\" href=\"/\" class=\"logo1\">\n  <img src=\"/assets/i/myLogo.png\" alt=\"custFood\" />\n</a>\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['./mobile-menu.component.scss']\n})\nexport class MobileMenuComponent {\n  @Input() set isOpen(open: boolean) {\n    this.open = open;\n    document.body.classList[open ? 'add' : 'remove']('no-overflow');\n  }\n\n  @HostBinding('class.is-open') open = false;\n}\n","<div class=\"wrap\" [hidden]=\"!open\">\n  <ng-content select=\".user-data\"></ng-content>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NavigationService } from 'src/app/services/navigation.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  pages = [\n    { title: 'sdsd', path: 'contacts' },\n    { title: 'Terminal Companies', path: 'terminal-companies' },\n    { title: 'Tanks', path: 'tanks' },\n  ];\n\n  public menu = {\n    isOpen: false,\n  };\n\n  constructor(\n    private nav: NavigationService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // load the correct navigation routes for current user\n  }\n\n  /**\n   * Get the active route\n   */\n  get activeRoute() {\n    return this.pages.find(({ path }: any) =>\n      this.router.isActive(this.router.parseUrl(`/dashboard/${path}`), false)\n    );\n  }\n\n  /**\n   * Toggle mobile menu\n   * @param toggl Show or hide menu\n   */\n  toggleMenu(toggl?: boolean) {\n    const { isOpen } = this.menu;\n\n    this.menu.isOpen = typeof toggl === 'boolean' ? toggl : !isOpen;\n  }\n}\n","<div class=\"wrap\">\n  <div class=\"active-route is-mobile\" (click)=\"toggleMenu()\">\n    {{ activeRoute?.title }}\n    <span class=\"ic ic-arrow-down---sm--gray\"></span>\n  </div>\n  <nav [class.is-open]=\"menu.isOpen\">\n    <ul>\n      <li *ngFor=\"let page of pages\">\n        <a\n          [routerLink]=\"[page.path]\"\n          routerLinkActive=\"active\"\n          (click)=\"toggleMenu(false)\"\n          >{{ page.title }}</a\n        >\n      </li>\n    </ul>\n  </nav>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent {\n  @Input() hasNotifications = null;\n}\n","<span class=\"notifications-bell\" [attr.data-has-notifications]=\"hasNotifications\"></span>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SidebarsService } from 'src/app/services/sidebars.service';\nimport { UnitService } from 'src/app/services/unit.service';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent {\n  @Input() user: any;\n  @Input() regionData: any = {\n    area: null,\n    region: null,\n    areas: [],\n    regions: [],\n  };\n\n  @Output() changeRegion = new EventEmitter<any>();\n\n  public menu = {\n    isOpen: false,\n  };\n\n  constructor(\n    private sidebar: SidebarsService,\n    private unitsService: UnitService\n  ) {}\n\n  get units() {\n    return this.unitsService.units;\n  }\n\n  get unit() {\n    return this.unitsService.currentUnit;\n  }\n\n  /**\n   * Change the selected region & area\n   * @param type Region or area to change\n   * @param value Actual value for the new region/area\n   */\n  changeLocation(type: string, value: string) {\n    this.changeRegion.emit({\n      type,\n      value: this.regionData[`${type}s`].find((d: any) => d.id === value),\n    });\n  }\n\n  changeUnit(value: string) {\n    this.unitsService.change(value);\n  }\n\n  /**\n   * Open the sidebar for managing regions & areas\n   */\n  editRegions() {\n    this.sidebar.open({ editor: 'manage-regions-areas' });\n  }\n\n  /**\n   * Toggle mobile menu\n   * @param toggl Show or hide menu\n   */\n  toggleMenu(toggl?: boolean) {\n    const { isOpen } = this.menu;\n\n    this.menu.isOpen = typeof toggl === 'boolean' ? toggl : !isOpen;\n  }\n}\n","<div class=\"wrap\">\n  <div class=\"content-wrap topbar\">\n    <div\n      class=\"toggle-mobile-menu is-mobile\"\n      (click)=\"toggleMenu()\"\n      [class.is-open]=\"menu.isOpen\"\n    >\n      <span class=\"ic ic-menu\" [class.is-open]=\"menu.isOpen\"></span>\n    </div>\n    <div class=\"flex left header-inputs\">\n      <ng-template [ngIf]=\"regionData\">\n        <app-select\n          [options]=\"regionData.regions\"\n          [selected]=\"regionData.region\"\n          (selectedChange)=\"changeLocation('region', $event)\"\n          labelKey=\"name\"\n          icon=\"glob\"\n          *appIfRole=\"'admin'\"\n        ></app-select>\n        <app-select\n          [options]=\"regionData.areas\"\n          [selected]=\"regionData.area\"\n          (selectedChange)=\"changeLocation('area', $event)\"\n          labelKey=\"name\"\n          icon=\"location\"\n        ></app-select>\n        <app-select\n          [options]=\"units\"\n          [selected]=\"unit\"\n          (selectedChange)=\"changeUnit($event)\"\n          icon=\"db\"\n          *appIfRole=\"'scheduler marketer'\"\n        ></app-select>\n        <div class=\"settings-btn\" (click)=\"editRegions()\" *appIfRole=\"'admin'\">\n          <div class=\"ic ic-cog\"></div>\n        </div>\n      </ng-template>\n    </div>\n    <div class=\"flex center is-mobile\" [hidden]=\"!menu.isOpen\">\n      <app-logo class=\"logo\"></app-logo>\n    </div>\n    <div class=\"right flex is-not-mobile\">\n      <app-logo class=\"logo\"></app-logo>\n      <div class=\"user-data flex\">\n        <app-notifications\n          class=\"notif-el\"\n          [hasNotifications]=\"true\"\n        ></app-notifications>\n        <app-user-profile class=\"profile-el\" [user]=\"user\"></app-user-profile>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"content-wrap nav-wrap\">\n    <app-navigation></app-navigation>\n    <button\n      class=\"btn primary add-transaction-btn\"\n      *appIfRole=\"'scheduler marketer'\"\n    >\n      <span class=\"ic ic-add\"></span>\n      <span class=\"is-not-mobile\">Transaction</span>\n    </button>\n  </div>\n\n  <div class=\"content-wrap\">\n    <app-mobile-menu class=\"mobile-menu is-mobile\" [isOpen]=\"menu.isOpen\">\n      <div class=\"user-data flex\">\n        <app-user-profile class=\"profile-el\" [user]=\"user\"></app-user-profile>\n        <app-notifications\n          class=\"notif-el\"\n          [hasNotifications]=\"true\"\n        ></app-notifications>\n      </div>\n    </app-mobile-menu>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent {\n  @Input() user: any = {};\n}\n","import { EventEmitter, Component, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n})\nexport class RadioGroupComponent implements OnInit {\n  @Output() pageSelected = new EventEmitter<string>();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n  <div class=\"custom-control custom-radio mr-2\">\n    <input\n      type=\"radio\"\n      id=\"currentSpecs\"\n      name=\"customRadio\"\n      class=\"custom-control-input mb-3\"\n      (click)=\"this.pageSelected.emit('currentSpecs')\"\n      checked\n    />\n    <label class=\"custom-control-label\" for=\"currentSpecs\">Current Specs</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"historicalSpecs\"\n      name=\"customRadio\"\n      class=\"custom-control-input\"\n      (click)=\"this.pageSelected.emit('historicalSpecs')\"\n    />\n    <label class=\"custom-control-label\" for=\"historicalSpecs\"\n      >Historical Specs</label\n    >\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RescipesServiceService } from 'src/app/services/rescipes-service.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-recipe-card',\n  templateUrl: './recipe-card.component.html',\n  styleUrls: ['./recipe-card.component.scss'],\n})\nexport class RecipeCardComponent implements OnInit {\n  @Input() label: string;\n  @Input() imageSrc: string;\n  @Input() url: string;\n  @Input() ingredients: string;\n  @Input() calories: string;\n  remove = false;\n  userId: any;\n  constructor(\n    private route: ActivatedRoute,\n    private recipesService: RescipesServiceService,\n    private userService: AuthenticationService\n  ) {\n    this.userId = this.route.snapshot.paramMap.get('userId');\n  }\n  addWishList() {\n    this.recipesService.getRecipe(this.label).subscribe((res: any) => {\n      this.recipesService\n        .addWishList(res._id, this.userId)\n        .subscribe((res) => (this.remove = true));\n    });\n  }\n  deleteWishList() {\n    this.recipesService.getRecipe(this.label).subscribe((res: any) => {\n      this.recipesService\n        .deleteWishList(res._id, this.userId)\n        .subscribe((res) => (this.remove = false));\n    });\n  }\n  ngOnInit(): void {\n    this.recipesService.getRecipe(this.label).subscribe((res: any) => {\n      const id = res._id;\n      this.userService.getData(this.userId).subscribe((res: any) => {\n        for (const item of res.wishList) {\n          if (item._id == id) {\n            this.remove = true;\n            break;\n          }\n        }\n      });\n    });\n  }\n}\n","<div class=\"container\">\n  <div\n    style=\"display: flex; flex-direction: row; justify-content: space-between;\"\n  >\n    <h4>{{ this.label }}</h4>\n    <div>\n      <div style=\"display: flex; flex-direction: row-reverse;\">\n        <button\n          *ngIf=\"!this.remove\"\n          class=\"btn primary add-transaction-btn justify-content-lg-between\"\n        >\n          <span class=\"fa fa-plus\" style=\"margin-right: 3px;\"></span>\n          <span class=\"is-not-mobile\" (click)=\"addWishList()\"\n            >Add to WishList</span\n          >\n        </button>\n        <button\n          *ngIf=\"this.remove\"\n          class=\"btn btn-danger add-transaction-btn justify-content-lg-between\"\n        >\n          <span class=\"fa fa-ban\" style=\"margin-right: 3px;\"></span>\n          <span class=\"is-not-mobile\" (click)=\"deleteWishList()\"\n            >Remove from WishList</span\n          >\n        </button>\n      </div>\n      <br />\n    </div>\n  </div>\n  <div\n    style=\"display: flex; flex-direction: row; justify-content: space-between;\"\n  >\n    <table style=\"border: 4px;\">\n      <tr>\n        <th>Calories:</th>\n        <td>{{ this.calories }} calories</td>\n      </tr>\n      <tr>\n        <th style=\"width: 6vw; vertical-align: top;\">Ingredients:</th>\n        <td\n          style=\"\n            height: 10vh;\n            width: 44vw;\n            vertical-align: top;\n            overflow: hidden;\n          \"\n        >\n          <small> {{ this.ingredients }}</small>\n        </td>\n      </tr>\n    </table>\n\n    <div\n      class=\"image\"\n      [ngStyle]=\"{\n        'background-image': 'url(' + this.imageSrc + ')'\n      }\"\n    ></div>\n  </div>\n  <div style=\"display: flex; flex-direction: row;\">\n    <th style=\"display: inline-block;\">\n      <a [href]=\"this.url\"\n        >How To Cook\n        <span> <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"> </i></span\n      ></a>\n    </th>\n    <div></div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-result-card',\n  templateUrl: './result-card.component.html',\n  styleUrls: ['./result-card.component.scss'],\n})\nexport class ResultCardComponent implements OnInit {\n  @Input() mix: string;\n  @Input() date: string;\n  @Input() maxOrder: string;\n  @Input() unity: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"bigContainer\">\n  <div class=\"label\">Result</div>\n  <div class=\"container\">\n    <div class=\"title\">AVAILABLE</div>\n    <div class=\"myRow\">\n      <div class=\"mix\">{{ this.mix }}</div>\n      <div>\n        <div class=\"total\">\n          {{ this.maxOrder\n          }}<span class=\"unity\">{{ this.unity | uppercase }}</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"myRow2\">\n      <div class=\"availability\">\n        Blend will be vailable on\n        <span class=\"date\">{{ this.date }}</span>\n      </div>\n      <div class=\"maxOrder\">Maximum Order</div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { SidebarsService } from 'src/app/services/sidebars.service';\n\n@Component({\n  selector: 'app-manage-regions-areas',\n  templateUrl: './manage-regions-areas.component.html',\n  styleUrls: ['./manage-regions-areas.component.scss']\n})\nexport class ManageRegionsAreasComponent {\n\n  constructor(private sidebar: SidebarsService) {}\n\n  close() {\n    this.sidebar.close();\n  }\n}\n","<div class=\"sidebar-editor\">\n  <div class=\"section-title\">Manage Regions and areas</div>\n\n  <div class=\"bottom-actions\">\n    <button class=\"btn primary\" (click)=\"close()\">Save Changes</button>\n    <button class=\"btn outline\" (click)=\"close()\">Cancel</button>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { SidebarsService } from 'src/app/services/sidebars.service';\nimport { map, tap, delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  public next = '';\n  public state: any = {};\n  private sub: any;\n\n  constructor(private service: SidebarsService) { }\n\n  ngOnInit(): void {\n    // subscribe to sidebar service\n    // open the sidebar based on service state\n    this.sub = this.service.state.pipe(\n      map((state: any) => ({ ...state, visible: Boolean(state.editor) })),\n      tap((state: any) => this.next = state.visible ? 'show' : 'hide'),\n      delay((300)),\n      tap(() => this.next = '')\n    ).subscribe((state: any) => this.state = state);\n  }\n\n  ngOnDestroy() {\n    // unsubscribe from service\n    this.sub.unsubscribe();\n  }\n}\n","<div class=\"wrap {{next ? 'will-'+next : ''}}\" [class.visible]=\"state.visible\">\n  <div class=\"content-wrap\">\n    <div class=\"editor-wrap\" [ngSwitch]=\"state.editor\">\n      <app-manage-regions-areas *ngSwitchCase=\"'manage-regions-areas'\"></app-manage-regions-areas>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-table',\n  templateUrl: './check-box-table.component.html',\n  styleUrls: ['./check-box-table.component.scss'],\n})\nexport class CheckBoxTableComponent implements OnInit {\n  @Input() labels: string[];\n  @Input() data: any;\n  @ViewChild('myCheckBox') myCheckbox: ElementRef;\n  constructor() {}\n  tanksMap = new Map();\n  @Output() checkedTank = new EventEmitter<Map<any, any>>();\n  ngOnInit(): void {\n    for (const item of this.data) {\n      this.tanksMap.set(item, false);\n    }\n  }\n  select(item: any) {\n    this.tanksMap.set(item, !this.tanksMap.get(item));\n    this.checkedTank.emit(this.tanksMap);\n  }\n}\n","<table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <td><img src=\"../../../../assets/i/checkbox.png\" /></td>\n\n      <td *ngFor=\"let item of this.labels\" scope=\"col\">{{ item }}</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of this.tanksMap | keyvalue\">\n      <td>\n        <app-checkbox\n          (change)=\"select(item.key)\"\n          #myCheckBox\n          [checked]=\"item.value\"\n        ></app-checkbox>\n      </td>\n      <td>Tank {{ item.key.id }}</td>\n      <td>{{ item.key.productName }}</td>\n      <th>{{ item.key.currentAvailability }}</th>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Mixes } from 'src/backend-mock/data/mixes';\ninterface mix {\n  sn: string;\n  productName: string;\n  description: any;\n}\n@Component({\n  selector: 'app-radio-table',\n  templateUrl: './radio-table.component.html',\n  styleUrls: ['./radio-table.component.scss'],\n})\nexport class RadioTableComponent implements OnInit {\n  constructor() {}\n  @Input() tanks: any = new Map();\n  mixesToShow: any = [];\n  data = Mixes;\n\n  space = '% ';\n  labels = ['SN', 'Product', 'Product Description'];\n  // getChosenTanks() {\n  //   let mixesToShow: any = [];\n  //   let ch = '';\n  //   for (let [key, value] of this.tanks) {\n  //     if (value === true) {\n  //       for (let item2 of this.data) {\n  //         for (let item of this.data.description) {\n  //           if (key.productName === item.productName && item.percentage > 0) {\n  //             mixesToShow.push(item2);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  //   return ch;\n  // }\n  searchProduct() {}\n  getDescriptionString(item: any) {\n    const ch = '';\n    for (const i of item.description) {\n    }\n  }\n  getRandomColors() {\n    const colors = ['#B2CC34', '#00B2BD', '#009DD9', '#0B2D71', '#769231'];\n    const randomColor = colors[Math.floor(Math.random() * colors.length)];\n    return randomColor;\n  }\n  ngOnInit(): void {}\n}\n","<div class=\"bigContainer\">\n  <table class=\"table table-hover\">\n    <thead>\n      <tr>\n        <td></td>\n\n        <td *ngFor=\"let item of this.labels\" scope=\"col\">{{ item }}</td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of this.data\">\n        <td class=\"radio\">\n          <label class=\"radios\">\n            <input type=\"radio\" class=\"oldCheckbox\" name=\"mix\" [value]=\"item\" />\n            <span class=\"checkmark\"></span>\n          </label>\n        </td>\n        <td>Tank {{ item.sn }}</td>\n        <th>{{ item.productName }}</th>\n        <td>\n          <span\n            style=\"display: inline-block;\"\n            *ngFor=\"let i of item.description; let index = index\"\n            ><span style=\"margin-right: 0.5em;\"\n              >{{ i.percentage }}{{ this.space }}\n            </span>\n            <span\n              class=\"normal\"\n              *ngIf=\"index < item.description.length - 1\"\n              class=\"strong\"\n            >\n              {{ i.name }} +\n            </span>\n            <span\n              class=\"normal\"\n              *ngIf=\"index === item.description.length - 1\"\n              class=\"strong\"\n            >\n              {{ i.name }} =\n            </span>\n          </span>\n          <span class=\"percentage\" [style.color]=\"this.getRandomColors()\"\n            >100%\n          </span>\n          <span>{{ item.productName }}</span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <hr />\n\n  <form #myForm=\"ngForm\">\n    <div>\n      <span>\n        <label for=\"exampleInputEmail1\">Target Blend (MT)</label>\n        <input\n          ngModel\n          required\n          name=\"targetBlend\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter \"\n        />\n      </span>\n    </div>\n    <div>\n      <span style=\"margin-top: 25px;\"\n        ><button\n          [disabled]=\"myForm.form.invalid\"\n          type=\"button\"\n          id=\"clearButton\"\n          class=\"btn btn-light\"\n        >\n          Clear\n        </button></span\n      >\n      <span style=\"margin-top: 25px;\"\n        ><button\n          [disabled]=\"myForm.form.invalid\"\n          type=\"button\"\n          id=\"forecastButton\"\n          class=\"btn btn-light\"\n        >\n          View Forecast\n        </button></span\n      >\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\ninterface TableHeader {\n  label: string;\n  unity: string;\n}\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent implements OnInit {\n  @Input() labels: TableHeader[];\n  @Input() data: any;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <td *ngFor=\"let item of this.labels\" scope=\"col\">{{ item.label }}</td>\n    </tr>\n    <tr>\n      <td *ngFor=\"let item of this.labels\" scope=\"col\">{{ item.unity }}</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of this.data\">\n      <td>Tank {{ item.id }}</td>\n      <td>{{ item.productName }}</td>\n      <td>{{ item.api }}</td>\n      <td>{{ item.viscosity }}</td>\n      <td>{{ item.sulfur }}</td>\n      <td>{{ item.flashPt }}</td>\n      <td>{{ item.water }}</td>\n      <td>{{ item.alAndsl }}</td>\n      <td>{{ item.mcr }}</td>\n      <td>{{ item.na }}</td>\n      <td>{{ item.van }}</td>\n      <td>{{ item.ccai }}</td>\n    </tr>\n  </tbody>\n</table>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IfRoleDirective } from './if-role.directive';\n\n@NgModule({\n  declarations: [\n    IfRoleDirective,\n  ],\n  exports: [\n    IfRoleDirective,\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DirectivesModule { }\n","import { Directive, TemplateRef, ViewContainerRef, Input, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { withLatestFrom, map } from 'rxjs/operators';\n\n/**\n * Check if current auth user has any of the specified roles\n */\n\n@Directive({\n  selector: '[appIfRole]'\n})\nexport class IfRoleDirective implements OnInit {\n  private hasView = false;\n  private role$ = new BehaviorSubject('');\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private auth: AuthService) {}\n\n  @Input() set appIfRole(role: string) {\n    this.role$.next(role);\n  }\n\n  ngOnInit() {\n    this.auth.user\n      .pipe(withLatestFrom(this.role$))\n      .pipe(map(this.checkRoles.bind(this)))\n      .subscribe(this.updateView.bind(this));\n  }\n\n  /**\n   * Check if expected roles are met\n   * @param param0 Data from observables\n   */\n  checkRoles([user, expected]: Array<any|string>) {\n    return expected.split(' ').some((role: string) => user.roles.indexOf(role) > -1);\n  }\n\n  /**\n   * Attach the view element if condition is met\n   * @param condition True or false if user has expected role\n   */\n  private updateView(condition: boolean) {\n    if (condition && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!condition && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n  canActivate(): boolean {\n    if (!localStorage.getItem('token')) {\n      this.router.navigate(['login']);\n      return false;\n    } else { return true; }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecipeComponent } from './recipe/recipe.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\n\nconst routes: Routes = [\n  { path: 'searchRecipe', component: RecipeComponent },\n  { path: 'myProfile', component: MyProfileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Dashboard2RoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard2',\n  templateUrl: './dashboard2.component.html',\n  styleUrls: ['./dashboard2.component.scss'],\n})\nexport class Dashboard2Component implements OnInit {\n  userId: any;\n  constructor(private route: ActivatedRoute) {\n    this.userId = this.route.snapshot.paramMap.get('userId');\n    console.log(this.userId);\n  }\n\n  ngOnInit(): void {}\n}\n","<app-header></app-header>\n<div>\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss'],\n  host: {\n    '(window:resize)': 'onWindowResize($event)',\n  },\n})\nexport class MyProfileComponent implements OnInit {\n  userId: any;\n  width: number = window.innerWidth;\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute\n  ) {\n    this.width = window.innerWidth;\n    this.userId = this.route.snapshot.paramMap.get('userId');\n  }\n  onWindowResize(event: any) {\n    this.width = event.target.innerWidth;\n    console.log(this.width);\n  }\n  loading = false;\n  recipes: any;\n  lastReasearch: any;\n  makeArray(value: string) {\n    const arr = value.trim().split(',');\n\n    console.log(arr);\n    if (arr.length > 1) arr.pop();\n    return arr;\n  }\n  ngOnInit(): void {\n    this.loading = true;\n    this.authenticationService.getData(this.userId).subscribe((res: any) => {\n      console.log(res);\n      this.recipes = res.wishList;\n      this.loading = false;\n      this.lastReasearch = res.lastReasearch;\n      console.log(this.lastReasearch);\n    });\n  }\n}\n","<app-container-header title=\"My Profile\"> </app-container-header>\n<div class=\"myContainer\" *ngIf=\"this.width > 1050\">\n  <div class=\"currentInventory\">\n    <div\n      style=\"\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        padding-right: 34px;\n        justify-content: space-between;\n        margin-bottom: 20px;\n      \"\n    >\n      <div class=\"ingredients\">Last Reasearches</div>\n    </div>\n    <div *ngFor=\"let item of this.lastReasearch\">\n      <div\n        fxLayoutGap=\"20px\"\n        style=\"display: flex; flex-direction: row; flex-wrap: wrap;\"\n      >\n        <app-food-icon\n          class=\"foodIcon\"\n          *ngFor=\"let item1 of makeArray(item)\"\n          [name]=\"item1\"\n          [icon]=\"item1\"\n        ></app-food-icon>\n      </div>\n      <hr />\n    </div>\n  </div>\n  <div class=\"inventoryForecast\">\n    <div class=\"ingredients mb-2\">WishList</div>\n    <div *ngFor=\"let item of this.recipes\">\n      <app-recipe-card\n        [label]=\"item.label\"\n        [calories]=\"item.calories\"\n        [imageSrc]=\"item.image\"\n        [url]=\"item.url\"\n        [ingredients]=\"item.ingredientLines\"\n      ></app-recipe-card\n      ><br />\n    </div>\n    <app-loading-spinner\n      class=\"spinner\"\n      *ngIf=\"this.loading\"\n    ></app-loading-spinner>\n  </div>\n</div>\n\n<div *ngIf=\"this.width <= 1050\" style=\"padding-right: 15px;\">\n  <div>\n    <div>\n      <div class=\"ingredients\">Last Reasearchs</div>\n    </div>\n    <div *ngFor=\"let item of this.lastReasearch\">\n      <div\n        fxLayoutGap=\"20px\"\n        style=\"display: flex; flex-direction: row; flex-wrap: wrap;\"\n      >\n        <app-food-icon\n          class=\"foodIcon\"\n          *ngFor=\"let item1 of makeArray(item)\"\n          [name]=\"item1\"\n          [icon]=\"item1\"\n        ></app-food-icon>\n      </div>\n      <hr />\n    </div>\n  </div>\n  <div>\n    <div class=\"ingredients mb-2\">WishList</div>\n    <div *ngFor=\"let item of this.recipes\">\n      <app-recipe-card\n        [label]=\"item.label\"\n        [calories]=\"item.calories\"\n        [imageSrc]=\"item.image\"\n        [url]=\"item.url\"\n        [ingredients]=\"item.ingredientLines\"\n      ></app-recipe-card\n      ><br />\n    </div>\n    <app-loading-spinner\n      class=\"spinner\"\n      *ngIf=\"this.loading\"\n    ></app-loading-spinner>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { RescipesServiceService } from '../../../services/rescipes-service.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe',\n  templateUrl: './recipe.component.html',\n  styleUrls: ['./recipe.component.scss'],\n  host: {\n    '(window:resize)': 'onWindowResize($event)',\n  },\n})\nexport class RecipeComponent implements OnInit {\n  constructor(\n    private recipesService: RescipesServiceService,\n    private auth: AuthenticationService,\n    private route: ActivatedRoute\n  ) {\n    this.userId = this.route.snapshot.paramMap.get('userId');\n    console.log(this.userId);\n    this.width = window.innerWidth;\n    console.log(this.width);\n  }\n  width: number = window.innerWidth;\n  onWindowResize(event: any) {\n    this.width = event.target.innerWidth;\n    console.log(this.width);\n  }\n  ingredientsMap = new Map<string, boolean>();\n  noSearch = true;\n  notFound = false;\n  userId: any;\n\n  searchString = '';\n  loading = false;\n  recipes: any = [];\n  ingredients = [\n    'apple',\n\n    'banana',\n    'beans',\n    'bread',\n    'broccoli',\n\n    'candy',\n    'carrot',\n    'cherry',\n    'chicken',\n    'chips',\n    'cocktail',\n    'coffee',\n    'cookie',\n    'corn',\n    'cream',\n    'eggplant',\n    'fish',\n\n    'garlic',\n    'grapefruit',\n    'grapes',\n    'ham',\n\n    'lemon',\n    'lettuce',\n    'meat',\n    'milk',\n    'mushroom',\n    'noodles',\n    'orange',\n    'peach',\n    'pear',\n    'peas',\n    'pepper',\n    'pineapple',\n\n    'potatoe',\n    'sausage',\n    'Shrimp',\n    'soda',\n    'soup',\n    'spatula',\n    'strawberry',\n    'tomato',\n    'watermelon',\n    'wine',\n  ];\n  ngOnInit(): void {\n    for (const item of this.ingredients) {\n      this.ingredientsMap.set(item, false);\n    }\n  }\n  changeStatus(value: string) {\n    const name = value.trim().split(',')[0];\n    const status = value.trim().split(',')[1];\n    let booleanString: boolean;\n    if (status == 'false') {\n      booleanString = false;\n    } else {\n      booleanString = true;\n    }\n\n    this.ingredientsMap.set(name, booleanString);\n\n    console.log(this.ingredientsMap);\n  }\n  getRecipes() {\n    this.notFound = false;\n    this.noSearch = false;\n    this.loading = true;\n    let ingredients = '';\n    for (const [key, value] of this.ingredientsMap) {\n      if (value == true) {\n        ingredients += key + ',';\n      }\n    }\n\n    console.log(ingredients);\n    this.recipesService.getRecipes(ingredients).subscribe((res: any) => {\n      this.recipes = res;\n\n      if (this.recipes.length == 0) {\n        this.notFound = true;\n      }\n      this.loading = false;\n    });\n  }\n  addWishList() {\n    let ingredients = '';\n    for (const [key, value] of this.ingredientsMap) {\n      if (value == true) {\n        ingredients += key + ',';\n      }\n    }\n    this.auth\n      .addLastReasearch(ingredients, this.userId)\n      .subscribe((res: any) => {\n        console.log(res);\n      });\n  }\n\n  showSearch(value: string) {\n    console.log(value);\n    this.searchString = value;\n  }\n}\n","<app-container-header title=\"Search Recipes\"> </app-container-header>\n<div class=\"myContainer\" *ngIf=\"this.width > 1050\">\n  <div class=\"currentInventory\">\n    <div\n      style=\"\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        padding-right: 34px;\n        justify-content: space-between;\n        margin-bottom: 20px;\n      \"\n    >\n      <div class=\"ingredients\">Ingredients</div>\n      <div class=\"row\">\n        <app-search-field\n          *ngIf=\"this.width > 1210\"\n          width=\"300px\"\n          style=\"margin-right: 10px;\"\n          placeholder=\"Search ...\"\n          (getInput)=\"showSearch($event)\"\n        ></app-search-field>\n        <app-search-field\n          *ngIf=\"this.width <= 1210\"\n          width=\"150px\"\n          style=\"margin-right: 5px; margin-left: 15px;\"\n          placeholder=\"Search ...\"\n          (getInput)=\"showSearch($event)\"\n        ></app-search-field>\n        <button\n          (click)=\"getRecipes()\"\n          (click)=\"addWishList()\"\n          class=\"btn primary add-transaction-btn\"\n        >\n          <span class=\"fa fa-cutlery\"></span>\n          <span class=\"is-not-mobile\">Get Recipes</span>\n        </button>\n      </div>\n    </div>\n    <div\n      *ngIf=\"this.width > 1210\"\n      fxLayoutGap=\"20px\"\n      style=\"display: flex; flex-direction: row; flex-wrap: wrap;\"\n    >\n      <app-food-icon\n        (changeStatus)=\"changeStatus($event)\"\n        class=\"foodIcon\"\n        *ngFor=\"let item of this.ingredients | ingredientsFilter: searchString\"\n        [name]=\"item\"\n        [icon]=\"item\"\n      ></app-food-icon>\n    </div>\n    <div\n      *ngIf=\"this.width <= 1210\"\n      fxLayoutGap=\"20px\"\n      style=\"display: flex; flex-direction: row; flex-wrap: wrap;\"\n    >\n      <app-food-icon\n        [width]=\"this.width\"\n        (changeStatus)=\"changeStatus($event)\"\n        class=\"foodIcon1\"\n        *ngFor=\"let item of this.ingredients | ingredientsFilter: searchString\"\n        [name]=\"item\"\n        [icon]=\"item\"\n      ></app-food-icon>\n    </div>\n  </div>\n\n  <div class=\"inventoryForecast\">\n    <div class=\"notFound\" *ngIf=\"noSearch\">You will see Your recipes Here</div>\n    <div class=\"notFound\" *ngIf=\"this.notFound && !noSearch\">\n      No Recipes Found\n    </div>\n    <div *ngFor=\"let item of this.recipes\">\n      <app-recipe-card\n        [label]=\"item.recipe.label\"\n        [calories]=\"item.recipe.calories\"\n        [imageSrc]=\"item.recipe.image\"\n        [url]=\"item.recipe.url\"\n        [ingredients]=\"item.recipe.ingredientLines\"\n      ></app-recipe-card\n      ><br />\n    </div>\n    <app-loading-spinner\n      class=\"spinner\"\n      *ngIf=\"this.loading\"\n    ></app-loading-spinner>\n  </div>\n</div>\n\n<div *ngIf=\"this.width <= 1050\" style=\"padding-right: 15px;\">\n  <button\n    (click)=\"getRecipes()\"\n    (click)=\"addWishList()\"\n    style=\"width: 100%; margin-right: 30px;\"\n    class=\"btn primary add-transaction-btn\"\n  >\n    <span class=\"fa fa-cutlery\"></span>\n    <span class=\"is-not-mobile\">Get Recipes</span>\n  </button>\n  <br />\n  <div\n    fxLayoutGap=\"20px\"\n    style=\"display: flex; flex-direction: row; flex-wrap: wrap;\"\n  >\n    <app-food-icon\n      (changeStatus)=\"changeStatus($event)\"\n      class=\"foodIcon1\"\n      *ngFor=\"let item of this.ingredients | ingredientsFilter: searchString\"\n      [name]=\"item\"\n      [icon]=\"item\"\n    ></app-food-icon>\n  </div>\n\n  <div style=\"text-align: center;\" *ngIf=\"noSearch\">\n    You will see Your recipes Here\n  </div>\n\n  <div *ngFor=\"let item of this.recipes\">\n    <app-recipe-card\n      [label]=\"item.recipe.label\"\n      [calories]=\"item.recipe.calories\"\n      [imageSrc]=\"item.recipe.image\"\n      [url]=\"item.recipe.url\"\n      [ingredients]=\"item.recipe.ingredientLines\"\n    ></app-recipe-card\n    ><br />\n  </div>\n  <app-loading-spinner\n    class=\"spinner\"\n    *ngIf=\"this.loading\"\n  ></app-loading-spinner>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-confirm-user',\n  templateUrl: './confirm-user.component.html',\n  styleUrls: ['./confirm-user.component.scss'],\n})\nexport class ConfirmUserComponent implements OnInit {\n  loading = false;\n  success = false;\n  token: any;\n  resultMessage = ';';\n  constructor(\n    private auth: AuthenticationService,\n    private route: ActivatedRoute\n  ) {\n    this.token = this.route.snapshot.paramMap.get('token');\n    console.log(this.token);\n    this.auth.checkConfimationToken(this.token).subscribe(\n      (res) => {},\n      (err) => {\n        this.resultMessage = 'Invalid Token';\n        this.success = true;\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n  onSubmit(form: NgForm) {\n    this.loading = true;\n    this.auth.confirmUser(this.token).subscribe((res) => {\n      this.success = true;\n      this.resultMessage = 'Your Account is confirmed';\n      this.loading = false;\n    });\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"!this.loading\" class=\"login-content\">\n  <form\n    *ngIf=\"!this.success\"\n    class=\"form\"\n    type=\"form\"\n    #registerForm=\"ngForm\"\n    (submit)=\"onSubmit(registerForm)\"\n  >\n    <app-logo class=\"d-flex justify-content-center\" type=\"form\"></app-logo>\n\n    <div class=\"btn-group\">\n      <input type=\"submit\" class=\"btn primary\" value=\"Reset Password\" />\n    </div>\n  </form>\n\n  <div class=\"register\" *ngIf=\"!this.loading && this.success\">\n    {{ this.resultMessage }}\n    <span [routerLink]=\"['login']\" style=\"font-size: 14px; font-weight: bold;\">\n      <a> Go to Login Page? </a></span\n    >\n  </div>\n  <!--end .form-->\n</div>\n<app-loading-spinner\n  class=\"loadingSpinner\"\n  *ngIf=\"this.loading\"\n></app-loading-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  constructor(private auth: AuthenticationService) {}\n\n  ngOnInit(): void {}\n  loading = false;\n  error = false;\n  errorMessage = '';\n  email: string;\n  emailStatus = true;\n  resultMessage = '';\n  success = false;\n\n  onSubmit(form: NgForm) {\n    this.error = false;\n    this.loading = true;\n    this.auth.sendResetEmail(this.email).subscribe(\n      (res: any) => {\n        console.log(res);\n\n        this.resultMessage = 'An email is sent to you ';\n        this.success = true;\n        this.loading = false;\n      },\n      (err) => {\n        this.error = true;\n        this.errorMessage = err.error.message;\n        this.loading = false;\n      }\n    );\n  }\n}\n","<div *ngIf=\"!this.loading\" class=\"login-content\">\n  <form\n    *ngIf=\"!this.success\"\n    class=\"form\"\n    type=\"form\"\n    #registerForm=\"ngForm\"\n    (submit)=\"onSubmit(registerForm)\"\n  >\n    <app-logo class=\"d-flex justify-content-center\" type=\"form\"></app-logo>\n\n    <app-simple-input\n      (getInput)=\"this.email = $event\"\n      label=\"Email\"\n      type=\"email\"\n      placeholder=\"Email\"\n      icon=\"email\"\n      required=\"true\"\n      name=\"email\"\n      (getInputStatus)=\"this.emailStatus = $event\"\n    >\n    </app-simple-input>\n\n    <div class=\"d-flex justify-content-center\">\n      <app-error-message\n        *ngIf=\"this.error\"\n        [message]=\"this.errorMessage\"\n      ></app-error-message>\n    </div>\n    <div class=\"btn-group\">\n      <input\n        type=\"submit\"\n        class=\"btn primary\"\n        [disabled]=\"this.emailStatus\"\n        value=\"Send Email\"\n      />\n    </div>\n  </form>\n  <div\n    class=\"register\"\n    *ngIf=\"!this.loading && !this.success\"\n    [routerLink]=\"['/login']\"\n  >\n    Go to Login!\n  </div>\n  <div\n    class=\"register\"\n    *ngIf=\"!this.loading && this.success\"\n    [routerLink]=\"['/login']\"\n  >\n    Email is sent to You\n  </div>\n\n  <!--end .form-->\n</div>\n<app-loading-spinner\n  class=\"loadingSpinner\"\n  *ngIf=\"this.loading\"\n></app-loading-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss'],\n})\nexport class RegisterPageComponent implements OnInit {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n  password1: string;\n  password2: string;\n  userName: string;\n  email: string;\n  errorMessage = '';\n  loading = false;\n  error = false;\n  emailStatus = true;\n  password1Status = true;\n  password2Status = true;\n  userNameStatus = true;\n  success = false;\n  resultMessage =\n    'A Confirmation Email is Sent (You may sometimes find it in the spam) ';\n  passwordsCheck() {\n    if (this.password1 == this.password2) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.error = false;\n    this.loading = true;\n    const user: User = {\n      email: this.email,\n      userName: this.userName,\n      password: this.password1,\n    };\n    this.authService.register(user).subscribe(\n      (res) => {\n        console.log(res);\n        this.authService.createConfirmToken(this.email).subscribe((res) => {\n          this.loading = false;\n          this.success = true;\n        });\n      },\n      (err) => {\n        console.log(err);\n        this.error = true;\n        this.errorMessage = err.error.message;\n        this.loading = false;\n      }\n    );\n  }\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"!this.loading\" class=\"login-content\">\n  <form\n    *ngIf=\"!this.success\"\n    class=\"form\"\n    type=\"form\"\n    #registerForm=\"ngForm\"\n    (submit)=\"onSubmit(registerForm)\"\n  >\n    <app-logo class=\"d-flex justify-content-center\" type=\"form\"></app-logo>\n    <app-simple-input\n      (getInput)=\"this.userName = $event\"\n      label=\"Username\"\n      type=\"text\"\n      placeholder=\"Username\"\n      icon=\"person\"\n      required=\"true\"\n      name=\"userName\"\n      (getInputStatus)=\"this.userNameStatus = $event\"\n    >\n    </app-simple-input>\n\n    <app-simple-input\n      (getInput)=\"this.email = $event\"\n      label=\"Email\"\n      type=\"email\"\n      placeholder=\"Email\"\n      icon=\"email\"\n      required=\"true\"\n      name=\"email\"\n      (getInputStatus)=\"this.emailStatus = $event\"\n    >\n    </app-simple-input>\n\n    <app-simple-input\n      (getInput)=\"this.password1 = $event\"\n      label=\"Password1\"\n      type=\"password\"\n      placeholder=\"Password1\"\n      icon=\"Password\"\n      required=\"true\"\n      name=\"password1\"\n      (getInputStatus)=\"this.password1Status = $event\"\n    >\n    </app-simple-input>\n    <app-simple-input\n      (getInput)=\"this.password2 = $event\"\n      label=\"Password2\"\n      type=\"password\"\n      placeholder=\"Password2\"\n      icon=\"Password\"\n      required=\"true\"\n      name=\"password2\"\n      (getInputStatus)=\"this.password2Status = $event\"\n    >\n    </app-simple-input>\n    <div class=\"d-flex justify-content-center\">\n      <app-error-message\n        *ngIf=\"this.error\"\n        [message]=\"this.errorMessage\"\n      ></app-error-message>\n    </div>\n    <div class=\"btn-group\">\n      <input\n        type=\"submit\"\n        class=\"btn primary\"\n        [disabled]=\"\n          this.emailStatus ||\n          this.password1Status ||\n          this.password2Status ||\n          this.userNameStatus ||\n          this.passwordsCheck()\n        \"\n        value=\"Register\"\n      />\n    </div>\n  </form>\n  <div\n    class=\"register\"\n    *ngIf=\"!this.loading && !this.success\"\n    [routerLink]=\"['/login']\"\n  >\n    You already have an account? Go to Login!\n  </div>\n  <div class=\"register\" *ngIf=\"!this.loading && this.success\">\n    {{ this.resultMessage }}\n  </div>\n  <!--end .form-->\n</div>\n<app-loading-spinner\n  class=\"loadingSpinner\"\n  *ngIf=\"this.loading\"\n></app-loading-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  password1: string = '';\n  password2: string = '';\n  password1Status = false;\n  password2Status = false;\n  error = false;\n  errorMessage = '';\n  loading = false;\n  token: any;\n  failure = false;\n  resultMessage = 'Token Not Found';\n\n  constructor(\n    private router: Router,\n    private auth: AuthenticationService,\n    private route: ActivatedRoute\n  ) {\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.auth.checkToken(this.token).subscribe(\n      (res) => {\n        console.log(res);\n      },\n      (err) => {\n        this.failure = true;\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n  passwordsCheck() {\n    if (this.password1.length == 0) return true;\n    if (this.password1 == this.password2) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.auth.resetPassword(this.password1, this.token).subscribe((res) => {\n      {\n        this.failure = true;\n        this.resultMessage = 'Password Updated Successfully';\n      }\n    });\n  }\n}\n","<div *ngIf=\"!this.loading\" class=\"login-content\">\n  <form\n    *ngIf=\"!this.failure\"\n    class=\"form\"\n    type=\"form\"\n    #registerForm=\"ngForm\"\n    (submit)=\"onSubmit(registerForm)\"\n  >\n    <app-logo class=\"d-flex justify-content-center\" type=\"form\"></app-logo>\n\n    <app-simple-input\n      (getInput)=\"this.password1 = $event\"\n      label=\"Password1\"\n      type=\"password\"\n      placeholder=\"Password1\"\n      icon=\"Password\"\n      required=\"true\"\n      name=\"password1\"\n      (getInputStatus)=\"this.password1Status = $event\"\n    >\n    </app-simple-input>\n    <app-simple-input\n      (getInput)=\"this.password2 = $event\"\n      label=\"Password2\"\n      type=\"password\"\n      placeholder=\"Password2\"\n      icon=\"Password\"\n      required=\"true\"\n      name=\"password2\"\n      (getInputStatus)=\"this.password2Status = $event\"\n    >\n    </app-simple-input>\n    <div class=\"d-flex justify-content-center\">\n      <app-error-message\n        *ngIf=\"this.error\"\n        [message]=\"this.errorMessage\"\n      ></app-error-message>\n    </div>\n    <div class=\"btn-group\">\n      <input\n        type=\"submit\"\n        class=\"btn primary\"\n        [disabled]=\"\n          this.password1Status || this.password2Status || this.passwordsCheck()\n        \"\n        value=\"Reset Password\"\n      />\n    </div>\n  </form>\n  <div\n    class=\"register\"\n    *ngIf=\"!this.loading && !this.failure\"\n    [routerLink]=\"['/login']\"\n  >\n    Go to Login!\n  </div>\n  <div class=\"register\" *ngIf=\"!this.loading && this.failure\">\n    {{ this.resultMessage }}\n  </div>\n  <!--end .form-->\n</div>\n<app-loading-spinner\n  class=\"loadingSpinner\"\n  *ngIf=\"this.loading\"\n></app-loading-spinner>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.scss']\n})\nexport class RefreshComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>refresh works!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n  name: 'ingredientsFilter',\n})\nexport class IngredientsFilterPipe implements PipeTransform {\n  transform(value: any[], searchString: string): unknown {\n    if (!searchString) {\n      console.log('no search');\n      return value;\n    }\n    return value.filter((it) => {\n      const ingredient = it.includes(searchString);\n\n      return ingredient;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'initials'\n})\nexport class InitialsPipe implements PipeTransform {\n\n  /**\n   * Transform a fullName string to initials only\n   * @param value String value\n   */\n  transform(value: string): string {\n    if (!value) {\n      return '';\n    }\n\n    return value.split(' ').map(d => d[0].toUpperCase()).join('');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InitialsPipe } from './initials.pipe';\nimport { IngredientsFilterPipe } from './ingredients-filter.pipe';\n\n@NgModule({\n  declarations: [InitialsPipe, IngredientsFilterPipe],\n  exports: [InitialsPipe, IngredientsFilterPipe],\n  imports: [CommonModule],\n})\nexport class PipesModule {}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from 'src/environments/environment';\nconst { HOST_URL, BASE_PATH } = environment.api;\n\n/**\n * This is an abstract api service\n * Extend this for defining a specific api service (see: regions.service)\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Returns an Observable for the HTTP GET request for the JSON resource.\n   * @return The Observable for the HTTP request.\n   */\n  fetch(path: string, options?: any): Observable<any> {\n    return this.http.get<any>(`${HOST_URL}${BASE_PATH}${path}`, options)\n      .pipe(catchError(this.handleError.bind(this)));\n  }\n\n  /**\n   * Returns an Observable for the HTTP POST request for the JSON resource.\n   * @return The Observable for the HTTP request.\n   */\n  post(path: string, options?: any): Observable<any> {\n    return this.http.post<any>(`${HOST_URL}${BASE_PATH}${path}`, options)\n      .pipe(catchError(this.handleError.bind(this)));\n  }\n\n  /**\n   * Handle HTTP error\n   */\n   private handleError(error: any) {\n    // In a real world app, we might use a remote logging infrastructure\n    // We'd also dig deeper into the error to get a better message\n    const errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n\n    console.error(errMsg); // log to console instead\n    return throwError(errMsg);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/internal/Observable';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { map, flatMap, filter } from 'rxjs/operators';\n\nimport { ApiService } from './api.service';\n\nconst localUser = () => JSON.parse(localStorage.getItem('currentUser') || 'null');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService extends ApiService {\n  // internal use only - user, as a behaviorSubject to be able to get currentUser\n  private user$ = new BehaviorSubject<any>(localUser());\n\n  // user data available publicly\n  public user = this.user$.asObservable().pipe(\n    filter(d => d !== null),\n    flatMap(() => this.fetch('/users/me')),\n    map(u => ({\n      ...u,\n      isAdmin: u.roles.indexOf('admin') > -1,\n    })));\n\n  /**\n   * Authenticate user\n   * @param username Username for user to authenticate\n   * @param password Password for user to authenticate\n   */\n  public login(username: string, password: string): Observable<any> {\n    return this.post('/users/authenticate', { username, password })\n      .pipe(map(user => {\n          // login successful\n          if (user) {\n              // store user details and jwt token in local storage to keep user logged in between page refreshes\n              localStorage.setItem('currentUser', JSON.stringify(user));\n              this.user$.next(user);\n          }\n\n          return user;\n      }));\n  }\n\n  public logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    this.user$.next(null);\n  }\n\n  public get currentUser() {\n    return this.user$.getValue();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { EmailValidator } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  private localHost = 'api/user/';\n  constructor(private http: HttpClient) {}\n  public register(user: User) {\n    return this.http.post(this.localHost, user);\n  }\n  public login(user: any) {\n    return this.http.post(this.localHost + 'login', user);\n  }\n  public getData(id: any) {\n    return this.http.get(this.localHost + id);\n  }\n  public sendResetEmail(email: string) {\n    return this.http.post(this.localHost + 'sendEmail', {\n      email: email,\n    });\n  }\n  public resetPassword(password: string, token: any) {\n    return this.http.post(this.localHost + 'resetPassword', {\n      password: password,\n      token: token,\n    });\n  }\n  public checkToken(token: any) {\n    return this.http.post(this.localHost + 'checkToken', {\n      token: token,\n    });\n  }\n  public addLastReasearch(ch: string, userId: any) {\n    return this.http.post(this.localHost + 'addToSearchList/' + userId, {\n      ingredients: ch,\n    });\n  }\n  public createConfirmToken(email: string) {\n    return this.http.post(this.localHost + 'confirmtoken', {\n      email: email,\n    });\n  }\n  public checkConfimationToken(token: any) {\n    return this.http.post(this.localHost + 'checkConfimationToken', {\n      token: token,\n    });\n  }\n  public confirmUser(token: any) {\n    return this.http.post(this.localHost + 'confirmUser', {\n      token: token,\n    });\n  }\n  handleError(error: any) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      if (error.status === 401) {\n        errorMessage = `Password or Email incorrect `;\n      } else {\n        errorMessage = 'Internal error ';\n      }\n    }\n\n    return throwError(errorMessage);\n  }\n  handleError3() {\n    return throwError('Internal Error');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\n\nimport { environment } from '../../environments/environment';\nconst { navigationConfig } = environment;\n\n/**\n * Filter all dynamic routes and get the routes available to current user based on user roles\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n  private routes$: BehaviorSubject<any>;\n  public routes: Observable<any>;\n\n  constructor(auth: AuthService) {\n    this.routes$ = new BehaviorSubject(null);\n    this.routes = this.routes$.asObservable().pipe(filter(d => d !== null));\n\n    auth.user.subscribe(this.updateRoutes.bind(this));\n  }\n\n  /**\n   * Filter all dynamic routes and get the routes available to current user based on user roles\n   * @param param0 Current User\n   */\n  updateRoutes({ roles: userRoles } = {} as any) {\n    this.routes$.next(\n      navigationConfig.filter(({ roles }) => (\n        roles.some(role => userRoles.indexOf(role) > -1)\n      )) as any\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { async } from '@angular/core/testing';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RescipesServiceService {\n  private url = 'api/recipe';\n  private userUrl = 'api/user';\n  constructor(private http: HttpClient) {}\n  getRecipes(ingredientString: string) {\n    const ingredients = {\n      ingredients: ingredientString,\n    };\n    return this.http.post(this.url, ingredients);\n  }\n  addWishList(recipeId: any, userId: any) {\n    return this.http.post(this.userUrl + '/updateWishList/' + userId, {\n      recipe: recipeId,\n    });\n  }\n  deleteWishList(recipeId: any, userId: any) {\n    return this.http.post(this.userUrl + '/deleteWishList/' + userId, {\n      recipe: recipeId,\n    });\n  }\n\n  getRecipe(label1: string) {\n    return this.http.post(this.url + '/getByLabel', { label: label1 });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarsService {\n  private state$: any = new BehaviorSubject<any>({});\n  public state = this.state$.asObservable();\n\n  /**\n   * Open a sidebar\n   */\n  open(state: any) {\n    this.state$.next(state);\n  }\n\n  /**\n   * Close any active sidebar\n   */\n  close() {\n    this.state$.next({});\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n  intercept(req: any, next: any) {\n    const authService = this.injector.get(AuthenticationService);\n\n    const tokenizedReq = req.clone({\n      headers: req.headers.set(\n        'Authorization',\n        'bearer ' + localStorage.getItem('token')\n      ),\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { environment } from 'src/environments/environment';\nconst { units } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitService {\n  private unit$: any = new BehaviorSubject<any>(units[0]);\n  public unit = this.unit$.asObservable();\n\n  get units() {\n    return [...units];\n  }\n\n  change(unit: string) {\n    this.unit$.next(units.find(({ id }) => id === unit));\n  }\n\n  get currentUnit() {\n    return this.unit$.getValue();\n  }\n\n  public convert(value: number, sourceUnit: string): number {\n    // TODO implement unit conversion\n    return value;\n  }\n}\n","export const users = [{\n  id: 1,\n  username: 'admin',\n  fullName: 'Romey Patt',\n  avatar: '/assets/i/user-1.jpg',\n  password: 'password',\n  roles: 'admin'\n}, {\n  id: 2,\n  username: 'scheduler',\n  fullName: 'Romey Patt',\n  avatar: '/assets/i/user-2.jpg',\n  password: 'password',\n  roles: 'scheduler'\n}, {\n  id: 3,\n  username: 'marketer',\n  fullName: 'Tim Smith',\n  avatar: '/assets/i/user-3.jpg',\n  password: 'password',\n  roles: 'marketer'\n}];\n","export * from './regions-areas';\n","const description1 = [\n  {\n    name: 'Product  A',\n    percentage: 40,\n  },\n  {\n    name: 'Product  B',\n    percentage: 20,\n  },\n  {\n    name: 'Product  C',\n    percentage: 40,\n  },\n];\nconst description2 = [\n  {\n    name: 'Product  A',\n    percentage: 30,\n  },\n  {\n    name: 'Product  B',\n    percentage: 50,\n  },\n  {\n    name: 'Product  C',\n    percentage: 20,\n  },\n];\nconst description3 = [\n  {\n    name: 'Product  A',\n    percentage: 70,\n  },\n  {\n    name: 'Product  B',\n    percentage: 20,\n  },\n  {\n    name: 'Product  C',\n    percentage: 10,\n  },\n];\nconst description4 = [\n  {\n    name: 'Product  A',\n    percentage: 80,\n  },\n  {\n    name: 'Product  B',\n    percentage: 10,\n  },\n  {\n    name: 'Product  C',\n    percentage: 10,\n  },\n];\nexport const Mixes = [\n  {\n    sn: '001',\n    productName: 'Product 1',\n    description: description1,\n  },\n  {\n    sn: '002',\n    productName: 'Product 2',\n    description: description2,\n  },\n  {\n    sn: '003',\n    productName: 'Product 3',\n    description: description3,\n  },\n  {\n    sn: '004',\n    productName: 'Product 4',\n    description: description4,\n  },\n];\n","export const regions = [\n  {id: 1, name: 'US West Coast'},\n  {id: 2, name: 'US Gulf Coast'},\n  {id: 3, name: 'Panama'},\n  {id: 4, name: 'Region 1'},\n];\n\nexport const areas = [\n {id: 1, name: 'San Francisco', region: 1},\n {id: 2, name: 'Los Angeles', region: 1},\n {id: 3, name: 'Alabama', region: 2},\n {id: 4, name: 'Louisiana', region: 2},\n {id: 5, name: 'Atlantic', region: 3},\n {id: 6, name: 'Pacific', region: 3},\n {id: 7, name: 'Area 1', region: 4},\n];\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\nimport { users } from './auth/users';\nimport * as data from './data';\n\n@Injectable()\nexport class BackendInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // wrap in delayed observable to simulate server api call\n    return of(null).pipe(mergeMap(() => {\n\n      // authenticate\n      if (request.url.endsWith('/users/authenticate') && request.method === 'POST') {\n        // find if any user matches login credentials\n        const filteredUsers = users.filter(user => {\n          return user.username === request.body.username && user.password === request.body.password;\n        });\n\n        if (filteredUsers.length) {\n          // if login details are valid return 200 OK with user details and fake jwt token\n          const user = filteredUsers[0];\n          const body = {\n            ...user,\n            password: undefined,\n          };\n\n          return of(new HttpResponse({ status: 200, body }));\n        } else {\n          // else return 400 bad request\n          return throwError({ error: { message: 'Wrong password or user name' } });\n        }\n      }\n\n      // get user\n      if (request.url.match(/\\/users\\/me$/i) && request.method === 'GET') {\n        const userId = parseInt(request.headers.get('Authorization') || '', 10);\n        const user = users.find(u => u.id === userId);\n\n        const body = {\n          ...user,\n          password: undefined,\n        };\n\n        return of(new HttpResponse({ status: 200, body }));\n      }\n\n      // get regions & areas\n      if (request.url.endsWith('/regions') && request.method === 'GET') {\n        const body = {\n          regions: data.regions,\n          areas: data.areas,\n        };\n\n        return of(new HttpResponse({ status: 200, body }));\n      }\n\n      // pass through any requests not handled above\n      return next.handle(request);\n    }))\n\n    // call materialize and dematerialize to ensure delay even if an error is\n    // thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n    .pipe(materialize())\n    .pipe(delay(500))\n    .pipe(dematerialize());\n  }\n}\n\nexport let fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: BackendInterceptor,\n  multi: true\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { navigation } from './navigation.config';\nimport { units } from './units.config';\n\nexport const environment = {\n  production: false,\n  api: {\n    HOST_URL: '',\n    BASE_PATH: '/api/v1.0',\n  },\n  navigationConfig: navigation,\n  units,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export const adminRoutes = [\n  { title: 'Contacts', path: 'contacts', roles: ['admin'] },\n  { title: 'Terminal Companies', path: 'terminal-companies', roles: ['admin'] },\n  { title: 'Tanks', path: 'tanks', roles: ['admin'] },\n];\n\nexport const schedulerRoutes = [\n  { title: 'Bunker Desk', path: 'bunker-desk', roles: ['scheduler'] },\n  {\n    title: 'Terminal Tanks & Barges',\n    path: 'terminal-tanks-barges',\n    roles: ['scheduler'],\n  },\n\n  {\n    title: 'Forecast Availability',\n    path: 'forecast-availability',\n    roles: ['scheduler'],\n  },\n  {\n    title: 'Current & Historical Specs',\n    path: 'current-and-historical-specs',\n    roles: ['scheduler'],\n  },\n];\n\nexport const marketerRoutes = [\n  { title: 'Quick Search', path: 'quick-search', roles: ['marketer'] },\n];\n\nexport const navigation = [\n  ...adminRoutes,\n  ...schedulerRoutes,\n  ...marketerRoutes,\n];\n","export const units = [\n  {id: 'mt', label: 'MT'},\n  {id: 'barrels', label: 'Barrels'},\n];\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}